#include "Header.h"

int main(void)
{
	system("chcp 1251");
	int n = 0;
	PF("Выберите тему: \n");
	PF("1. Линейные алгоритмы\n");
	PF("2. Разветвляющиеся алгоритмы\n");
	PF("3. Циклы\n");
	PF("4. Одномерные массивы\n");
	PF("5. Двумерные массивы\n");
	PF("6. Строки\n");
	scanf("%d", &n);
	switch (n)
	{
	case 1: 
		PF("Выберите задачу: \n");
		PF("1. Вычислить значение выражения cosx / (pi - 2*x) + 16*x*cos(x*y)\n");
		PF("2. Написать программу, которая определяет, является ли треугольник с заданными сторонами равнобедренным.\n");
		PF("3. В трехзначном числе x зачеркнули вторую цифру. Когда к образовавшемуся числу приписали вторую цифру числа x, то получилось число y. По заданному 99<y<1000 найти число x (ограничение – число десятков в y не заканчивается нулем).\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1: task1(); break;
		case 2: task2(); break;
		case 3: task3(); break;
		default: PF("Нет такой задачи!\n");
			break;
		}
		break;
	case 2:
		PF("Выберите задачу: \n");
		PF("1. z=2*cos(x)+3*x*x+0.75 или z=log(fabs(sin(2*x)))\n");
		PF("2. Введите с клавиатуры 7 слов. Затем по введенной цифре определите, существует ли слово с таким порядковым номером, и, если существует, выведите его на экран. Например, если набраны слова \"один два три четыре пять шесть семь\", то при нажатии клавиши 5 на экран должно быть выведено слово \"пять\".\n");
		PF("3. Даны первый прямоугольник со сторонами А, В и вто¬рой прямоугольник со сторонами С, О. Если первый прямоуголь¬ник помещается внутри второго так, что один из углов совпадает, вывести на экран сообщение \"Да\", иначе — сообщение \"Нет\"\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1: task4(); break;
		case 2: task5(); break;
		case 3: task6(); break;
		default: PF("Нет такой задачи!\n");
			break;
		}
		break;
	case 3:
		PF("Выберите задачу: \n");
		PF("1. Дано натуральное число N>2. Вычислить S(k=2=>N)=ln(1+k)^2.\n");
		PF("2. Выбросить из записи введенного натурального числа n цифры 0 и 5, оставив прежним порядок остальных цифр. Распечатать это число.\n");
		PF("3. (x)=(x-1)*y_n*(x)-(3x-2)*y_(n-1)*(x), y_0=0.1, y_1=x-1\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1: task7(); break;
		case 2: task8(); break;
		case 3: task9(); break;
		default: PF("Нет такой задачи!\n");
			break;
		}
		break;
	case 4:
		PF("Выберите задачу: \n");
		PF("1. Сформировать целочисленный массив X(N), элементами которого являются случайные числа из диапазона [-3..3].Определить, сколько раз в нем встретилось два подряд идущих нулевых элемента.\n");
		PF("2. Дан одномерный массив А неупорядоченных целых чисел. Вывести на экран разность между максимальным эле¬ментом и средним арифметическим значением для отрицатель¬ных элементов. Если отрицательных элементов нет, то вывести на экран сообщение «Нет».\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1: task10(); break;
		case 2: task11(); break;
		default: PF("Нет такой задачи!\n");
			break;
		}
		break;
	case 5:
		PF("Выберите задачу: \n");
		PF("1. В данной квадратной матрице, элементами которой являются целые числа, найти максимальный элемент в каждой строке и записать данные в новый массив.\n");
		PF("2. Дана целочисленная квадратная матрица А порядка N, где N — заданное натуральное число. Если в матрице А есть строка, все элементы которой являются удвоенными нечетными числами, то вывести на экран сообщение «Да», иначе сообщение «Нет».\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1: task12(); break;
		case 2: task13(); break;
		default: PF("Нет такой задачи!\n");
			break;
		}
		break;
	case 6:
		PF("Выберите задачу: \n");
		PF("1. Преобразовать строку, удвоив каждый символ.\n");
		PF("2. Дана последовательность символов, состоящая из слов. Выделить в каждом слове наиболее удаленную по алфавиту бук¬ву. Если от начала слова до положения этой буквы все буквы упорядочены по возрастанию, то удалить такое слово с сохране¬нием структуры пробелов. Вывести на экран отредактирован¬ный текст или сообщение «Нет», если удаления слов не было. Определение упорядоченности по возрастанию соответствует алфавитному порядку букв в слове.\n");
		scanf("%d", &n);
		switch (n)
		{
		case 1: task14(); break;
		case 2: task15(); break;
		default: PF("Нет такой задачи!\n");
			break;
		}
		break;
	default: PF("Нет такой темы!");
	}
}