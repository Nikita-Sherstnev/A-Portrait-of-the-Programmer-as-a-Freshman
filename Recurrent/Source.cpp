#include "Header.h"

int main(void) 
{
	system("chcp 1251");
	int n;
	PF("Введите номер нужной задачи (1-22): ");
	SC("%d", &n);
	switch (n)
	{
	case 1: PF("Итерационная формула Герона (приближенное значение корня)\n");  task1(); break;
	case 2: PF("Числа Фибоначчи\n"); task2(); break;
	case 3: PF("Нахождение числа сочетаний из N элементов по M\n"); task3(); break;
	case 4: PF("Нахождение наибольшего общего делителя\n"); task4(); break;
	case 5: PF("Рекурсивная ф-ция для суммы\n"); task5(); break;
	case 6: PF("Вывести на экран картинку\n"); task6(); break;
	case 7: PF("Вывод на экран цифр целого положительного числа в обратном порядке для всех целых чисел из интервала [a,b]\n"); task7(); break;
	case 8: PF("Написать алгоритм поиска простых чисел, не превосходящих n, как рекурсивную функцию.\n"); task8(); break;
	case 9: PF("Определить рекурсивную функцию, выводящую на экран цифры целого положительного числа.\n"); task9(); break;
	case 10: PF("Определить рекурсивную функцию, выводящую на экран двоичное представление заданного десятичного числа.\n"); task10(); break;
	case 11: PF("Определить рекурсивную функцию, возвращающую максимальный элемент массива.\n"); task11(); break;
	case 12: PF("Определить рекурсивную функцию, возвращающую минимальный элемент массива.\n"); task12(); break;
	case 13: PF("Описать рекурсивную функцию, осуществляющую перевод целого числа из десятичной системы счисления в систему с основанием К.\n"); task13(); break;
	case 14: PF("Описать функцию для вычисления значений функции Аккермана для неотрицательных чисел m и n\n"); task14(); break;
	case 15: PF("Даны первый член и знаменатель геометрической прогрессии. Описать рекурсивную функцию вычисления n-го члена прогрессии.\n"); task15(); break;
	case 16: PF("Даны первый член и разность арифметической прогрессии. Описать рекурсивную функцию для расчета n-го члена заданной арифметической прогрессии.\n"); task16(); break;
	case 17: PF("Разработать программу расчета произведения двух натуральных чисел, используя только операцию сложения.\n"); task17(); break;
	case 18: PF("Найти (в выражении присутствуют ровно n радикалов)\n"); task18(); break;
	case 19: PF("Описать рекурсивную функцию, позволяющую вычислить\n"); task19(); break;
	case 20: PF("Определить число, получаемое выписыванием в обратном порядке цифр заданного натурального числа (использовать рекурсивную функцию).\n"); task20(); break;
	case 21: PF("x_k=q*x_k-1+r*x_k-2+b, k=2,3... Вычислить x_n(n>=0)\n"); task21(); break;
	case 22: PF("Описать рекурсивную функцию, определенную для целых положительных чисел\n"); task22(); break;
	default: PF("Нет такой задачи!\n"); system("pause");
	}
	return 0;
}